<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out_DA14585\Objects\secondary_bootloader_585.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out_DA14585\Objects\secondary_bootloader_585.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Sat Apr 29 21:54:18 2023
<BR><P>
<H3>Maximum Stack Usage =        448 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_Handler</a><BR>
 <LI><a href="#[22]">HardFault_HandlerC</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">HardFault_HandlerC</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[6]">BLE_WAKEUP_LP_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1a]">DMA_Handler</a> from lto-llvm-a9bc1e.o(.text.DMA_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[10]">GPIO0_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[11]">GPIO1_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[12]">GPIO2_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[13]">GPIO3_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[14]">GPIO4_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[22]">HardFault_HandlerC</a> from lto-llvm-a9bc1e.o(.text.HardFault_HandlerC) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[a]">I2C_Handler</a> from lto-llvm-a9bc1e.o(.text.I2C_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[d]">KEYBRD_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[21]">NMI_HandlerC</a> from lto-llvm-a9bc1e.o(.text.NMI_HandlerC) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[17]">PCM_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1b]">RESERVED21_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1c]">RESERVED22_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1d]">RESERVED23_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[f]">RFCAL_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[b]">SPI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[18]">SRCIN_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[19]">SRCOUT_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[15]">SWTIM_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from lto-llvm-a9bc1e.o(.text.SysTick_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from lto-llvm-a9bc1e.o(system_DA14xxx) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[9]">UART2_Handler</a> from lto-llvm-a9bc1e.o(.text.UART2_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[8]">UART_Handler</a> from lto-llvm-a9bc1e.o(.text.UART_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[16]">WKUP_QUADEC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[1e]">main</a> from lto-llvm-a9bc1e.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[7]">rwble_isr</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[23]">spi_access</a> from lto-llvm-a9bc1e.o(.text.spi_access) referenced from lto-llvm-a9bc1e.o(.text.main)
 <LI><a href="#[24]">spi_dma_receive_cb</a> from lto-llvm-a9bc1e.o(.text.spi_dma_receive_cb) referenced from lto-llvm-a9bc1e.o(.text.spi_receive)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[25]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[27]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[45]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[46]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[47]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[48]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BLE_RF_DIAG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BLE_WAKEUP_LP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIO0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIO1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIO3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIO4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEYBRD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PCM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RESERVED21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RESERVED22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RESERVED23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RFCAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SRCIN_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SRCOUT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SWTIM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WKUP_QUADEC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>rwble_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[49]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(system_DA14xxx))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>AES_set_key</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AES_set_key &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[30]"></a>AES_convert_key</STRONG> (Thumb, 124 bytes, Stack size 28 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AES_convert_key
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[2b]"></a>AES_cbc_encrypt</STRONG> (Thumb, 176 bytes, Stack size 120 bytes, sw_aes.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_encrypt
</UL>

<P><STRONG><a name="[2c]"></a>AES_encrypt</STRONG> (Thumb, 284 bytes, Stack size 84 bytes, sw_aes.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_encrypt
</UL>

<P><STRONG><a name="[2d]"></a>AES_cbc_decrypt</STRONG> (Thumb, 182 bytes, Stack size 136 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[2e]"></a>AES_decrypt</STRONG> (Thumb, 408 bytes, Stack size 104 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = AES_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_encrypt
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
</UL>

<P><STRONG><a name="[1a]"></a>DMA_Handler</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, lto-llvm-a9bc1e.o(.text.DMA_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>HardFault_HandlerC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.HardFault_HandlerC))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_HandlerC
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_HandlerC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[a]"></a>I2C_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.I2C_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>NMI_HandlerC</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.NMI_HandlerC))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART2_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-a9bc1e.o(.text.UART2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART2_Handler &rArr; uart_intr_hndl &rArr; uart_rx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-a9bc1e.o(.text.UART_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART_Handler &rArr; uart_intr_hndl &rArr; uart_rx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 1116 bytes, Stack size 184 bytes, lto-llvm-a9bc1e.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = main &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_disable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_spi_gpios
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_indication (Weak Reference)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>Decrypt_Image</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lto-llvm-a9bc1e.o(.text.Decrypt_Image))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_convert_key
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>FlashRead</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lto-llvm-a9bc1e.o(.text.FlashRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FlashRead &rArr; spi_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_wait_dma_read_to_finish
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>crc32</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-a9bc1e.o(.text.crc32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>dma_initialize</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, lto-llvm-a9bc1e.o(.text.dma_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dma_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
</UL>

<P><STRONG><a name="[3f]"></a>reset_spi_gpios</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.reset_spi_gpios))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>spi_access</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.spi_access))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-a9bc1e.o(.text.main)
</UL>
<P><STRONG><a name="[38]"></a>spi_cs_high</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.spi_cs_high))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_initialize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_disable
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[34]"></a>spi_cs_low</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.spi_cs_low))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[3e]"></a>spi_disable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-a9bc1e.o(.text.spi_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>spi_dma_receive_cb</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-a9bc1e.o(.text.spi_dma_receive_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_dma_receive_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-a9bc1e.o(.text.spi_receive)
</UL>
<P><STRONG><a name="[32]"></a>spi_flash_is_busy</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-a9bc1e.o(.text.spi_flash_is_busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_flash_is_busy &rArr; spi_transaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[3c]"></a>spi_flash_release_from_power_down</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-a9bc1e.o(.text.spi_flash_release_from_power_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_flash_release_from_power_down &rArr; spi_transaction
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>spi_initialize</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, lto-llvm-a9bc1e.o(.text.spi_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = spi_initialize &rArr; dma_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>spi_receive</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, lto-llvm-a9bc1e.o(.text.spi_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spi_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[33]"></a>spi_set_bitmode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-a9bc1e.o(.text.spi_set_bitmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[40]"></a>spi_transaction</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-a9bc1e.o(.text.spi_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_transaction
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_is_busy
</UL>

<P><STRONG><a name="[37]"></a>spi_wait_dma_read_to_finish</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-a9bc1e.o(.text.spi_wait_dma_read_to_finish))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[39]"></a>uart_intr_hndl</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, lto-llvm-a9bc1e.o(.text.uart_intr_hndl))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uart_intr_hndl &rArr; uart_rx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>

<P><STRONG><a name="[42]"></a>uart_rx_isr</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-a9bc1e.o(.text.uart_rx_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3a]"></a>reset_indication</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<HR></body></html>
